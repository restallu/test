{
	"name": "AgregarMuertesyCasosCOVID19",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CSVFileBLOB_Case_Deaths",
						"type": "DatasetReference"
					},
					"name": "source1",
					"description": "Import data from CSVFileWeb_Case_Deaths"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CSVFileBLOB_Case_Deaths",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "pivot1"
				},
				{
					"name": "FiltrarContinenteEuropa"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as integer,",
				"          indicator as string,",
				"          daily_count as integer,",
				"          date as date 'yyyy-MM-dd',",
				"          rate_14_day as float,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     limit: 0,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 50) ~> source1",
				"FiltrarContinenteEuropa pivot(groupBy(country,",
				"          country_code,",
				"          continent,",
				"          date,",
				"          population),",
				"     pivotBy(indicator),",
				"     {} = sum(daily_count),",
				"     columnNaming: 'Total_$N$V',",
				"     lateral: true) ~> pivot1",
				"source1 filter(continent==\"Asia\") ~> FiltrarContinenteEuropa",
				"pivot1 derive({Total_confirmed cases} = toLong(byName('Total_confirmed cases')),",
				"          Total_deaths = toLong(byName('Total_deaths'))) ~> MapDrifted1",
				"MapDrifted1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as string,",
				"          indicator as string,",
				"          daily_count as string,",
				"          date as string,",
				"          rate_14_day as string,",
				"          source as string",
				"     ),",
				"     partitionFileNames:['pos_cases_and_deaths.csv'],",
				"     truncate: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     outputAssertFailedRows: true,",
				"     assertFailure_container: 'blobcontainer4datalake',",
				"     assertFailure_folderPath: 'covid19/blasillo/PAD-COVID-19/formatted',",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}